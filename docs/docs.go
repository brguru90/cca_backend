// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/generate_video_stream/": {
            "post": {
                "description": "api to get the list of all the videos uploaded by the logged user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VideoManagement"
                ],
                "summary": "Generate video stream",
                "parameters": [
                    {
                        "description": "Video IDs",
                        "name": "video_ids",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin_views.VideoStreamReqStruct"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    }
                }
            }
        },
        "/admin/get_stream_key/": {
            "post": {
                "description": "api to get video decryption key for hls stream",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VideoManagement"
                ],
                "summary": "get video decode key",
                "parameters": [
                    {
                        "description": "Video ID",
                        "name": "video_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin_views.VideoStreamKeyReqStruct"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    }
                }
            }
        },
        "/admin/playlist/": {
            "get": {
                "description": "api to fetch existing playlist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Playlist"
                ],
                "summary": "Get list of playlist",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    }
                }
            },
            "post": {
                "description": "api to create new empty playlist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Playlist"
                ],
                "summary": "Create new playlist",
                "parameters": [
                    {
                        "description": "New Playlist",
                        "name": "new_playlist_data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mongo_modals.VideoPlayListModal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    }
                }
            }
        },
        "/admin/upload_list/": {
            "get": {
                "description": "api to get the list of all the videos uploaded by the logged user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VideoManagement"
                ],
                "summary": "get all uploaded videos",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    }
                }
            }
        },
        "/admin/upload_streaming_video/": {
            "post": {
                "description": "api to upload video content for multiple adaptive bit rate streaming",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VideoManagement"
                ],
                "summary": "video upload",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Video file",
                        "name": "video_file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Preview image file",
                        "name": "preview_image_file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "created_by",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "description",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "name": "is_live",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "allow people to login into their account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "url to login",
                "parameters": [
                    {
                        "description": "Add user",
                        "name": "existing_user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user_views.UserCredentialReqStruct"
                        }
                    },
                    {
                        "enum": [
                            "admin",
                            "super_admin",
                            "customer"
                        ],
                        "type": "string",
                        "description": "Access level",
                        "name": "access_level",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    }
                }
            }
        },
        "/login_mobile": {
            "post": {
                "description": "allow people to login into their account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "url to login with mobile number",
                "parameters": [
                    {
                        "description": "Add user",
                        "name": "existing_user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user_views.UserMobileCredentialReqStruct"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    }
                }
            }
        },
        "/login_status": {
            "get": {
                "description": "api used to validate user login session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Login status",
                "parameters": [
                    {
                        "enum": [
                            "admin",
                            "super_admin",
                            "customer"
                        ],
                        "type": "string",
                        "description": "Access level",
                        "name": "access_level",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    }
                }
            }
        },
        "/sign_up": {
            "post": {
                "description": "allow people to create new to user account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "url to signup",
                "parameters": [
                    {
                        "description": "Add user",
                        "name": "new_user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user_views.UserCredentialReqStruct"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    }
                }
            }
        },
        "/user/": {
            "get": {
                "description": "allow people to view their user profile data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "View user data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    }
                }
            },
            "put": {
                "description": "allow people to update their user profile data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Update user data",
                "parameters": [
                    {
                        "description": "Add user",
                        "name": "new_user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mongo_modals.UsersModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    }
                }
            },
            "delete": {
                "description": "allow people to delete their account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "url to delete user account",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    }
                }
            }
        },
        "/user/active_sessions/": {
            "get": {
                "description": "return the active user session/token across all browser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Session"
                ],
                "summary": "Get active user login session",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    }
                }
            }
        },
        "/user/block_token/": {
            "post": {
                "description": "Adds the token of user to block list based on provided token id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Session"
                ],
                "summary": "Block specified session",
                "parameters": [
                    {
                        "description": "block token",
                        "name": "block_active_session",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mongo_modals.ActiveSessionsModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    }
                }
            }
        },
        "/user/logout/": {
            "get": {
                "description": "API allow user to logout, which delete the cookie which stores token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Session"
                ],
                "summary": "allow user to logout",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    }
                }
            }
        },
        "/verify_social_auth": {
            "post": {
                "description": "url to signup/login with social authentication",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Verify Social Authentication",
                "parameters": [
                    {
                        "description": "Add user",
                        "name": "new_or_existing_user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user_views.SocialAuthReqStruct"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/my_modules.ResponseFormat"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "admin_views.VideoStreamKeyReqStruct": {
            "type": "object",
            "required": [
                "video_id"
            ],
            "properties": {
                "video_id": {
                    "type": "string"
                }
            }
        },
        "admin_views.VideoStreamReqStruct": {
            "type": "object",
            "required": [
                "video_ids"
            ],
            "properties": {
                "video_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "mongo_modals.ActiveSessionsModel": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "exp": {
                    "type": "integer"
                },
                "ip": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "token_id": {
                    "type": "string"
                },
                "ua": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "mongo_modals.UsersModel": {
            "type": "object",
            "required": [
                "access_level",
                "access_level_weight",
                "email",
                "mobile",
                "password",
                "username"
            ],
            "properties": {
                "access_level": {
                    "type": "string"
                },
                "access_level_weight": {
                    "type": "integer"
                },
                "auth_provider": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "mobile": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "mongo_modals.VideoPlayListModal": {
            "type": "object",
            "required": [
                "is_live",
                "price",
                "title",
                "videos_ids"
            ],
            "properties": {
                "created_by_user": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "is_live": {
                    "type": "boolean"
                },
                "price": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "videos_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "my_modules.ResponseFormat": {
            "type": "object",
            "required": [
                "data",
                "msg",
                "status"
            ],
            "properties": {
                "data": {},
                "msg": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "user_views.SocialAuthReqStruct": {
            "type": "object",
            "required": [
                "idToken"
            ],
            "properties": {
                "idToken": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "user_views.UserCredentialReqStruct": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "user_views.UserMobileCredentialReqStruct": {
            "type": "object",
            "required": [
                "mobile",
                "password"
            ],
            "properties": {
                "mobile": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
