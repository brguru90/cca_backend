{
  "name": "cca",
  "version": "1.0.0",
  "main": "index.js",
  "author": "Guruprasad BR",
  "license": "MIT",
  "devDependencies": {
    "env-cmd": "^10.1.0",
    "nodemon": "^2.0.15",
    "npm-run": "^5.0.1",
    "npm-run-all": "^4.1.5",
    "pm2": "^5.2.0"
  },
  "scripts": {
    "clean": "rm go.mod go.sum",
    "go_init": "go mod init cca",
    "resolve_dependencies": "go mod tidy",
    "resolve_dependencies_116": " go mod tidy -e -go=1.16",
    "resolve_dependencies_117": " go mod tidy -e -go=1.17",
    "get_dependencies": "go get ./src",
    "race": "go run --race src/main.go",
    "get_swag": "go get -u github.com/swaggo/swag/cmd/swag",
    "install_swag": "go install github.com/swaggo/swag/cmd/swag",
    "get_razorpay": "go get -u github.com/razorpay/razorpay-go",
    "install_razorpay": "go install github.com/razorpay/razorpay-go",
    "swag": "~/go/bin/swag init --dir src",
    "@1": "--------------------------------------------------------",
    "test": "env-cmd -f ./env/.env npm-run-all race",
    "dev_server": "nodemon --exec go run src/main.go --signal SIGTERM",
    "cron_service": "nodemon --exec 'go run src/main.go -micro_service cron_job' --signal SIGTERM",
    "start_cron": "env-cmd -f ./env/.env npm-run-all  --serial --continue-on-error cron_service",
    "start": "env-cmd -f ./env/.env npm-run-all  --serial --continue-on-error swag dev_server",
    "start_prod_as_dev": "env-cmd -f ./env/.env_prod npm-run-all  --serial --continue-on-error swag dev_server",
    "install": "npm-run-all  --serial --continue-on-error resolve_dependencies get_dependencies get_razorpay install_razorpay  get_swag install_swag",
    "@2": "--------------------------------------------------------",
    "build_go": "go build -v -o go_server src/main.go",
    "build_render": "env-cmd -f ./env/.env_prod go build -tags netgo -ldflags '-s -w' -o app  src/main.go",
    "build": "env-cmd -f ./env/.env_prod npm-run-all  --serial build_go",
    "@3": "--------------------------------------------------------",
    "start_built": "npm-run ./go_server",
    "start_prod": "env-cmd -f ./env/.env_prod npm-run-all --serial  --continue-on-error swag start_built",
    "build_and_start_prod": "env-cmd -f ./env/.env_prod npm-run-all --serial  --continue-on-error swag build start_built",

    "install_prod": "pm2 start ecosystem.config.js",
    "uninstall_prod": "pm2 stop ecosystem.config.js",
    "autostart_prod": "pm2 startup",
    "remove_autostart_prod": "pm2 unstartup",
    "pm2_save": "pm2 save",

    "enable_prod": "npm-run-all --serial install_prod  autostart_prod pm2_save pm2_list",
    "disable_prod": "npm-run-all --serial uninstall_prod' remove_autostart_prod pm2_save pm2_list",
    "restart_prod": "npm-run-all --serial disable_prod enable_prod",
    "pm2_list": "pm2 list"
  }
}
