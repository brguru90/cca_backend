definitions:
  admin_views.CreatePlayListRespStruct:
    properties:
      data:
        $ref: '#/definitions/mongo_modals.VideoPlayListModal'
      msg:
        type: string
      status:
        type: string
    required:
    - data
    - msg
    - status
    type: object
  admin_views.GetAllPlayListsRespStruct:
    properties:
      data:
        items:
          $ref: '#/definitions/mongo_modals.VideoPlayListModal'
        type: array
      msg:
        type: string
      status:
        type: string
    required:
    - data
    - msg
    - status
    type: object
  admin_views.GetAllUploadedVideosRespStruct:
    properties:
      data:
        items:
          $ref: '#/definitions/mongo_modals.VideoUploadModal'
        type: array
      msg:
        type: string
      status:
        type: string
    required:
    - data
    - msg
    - status
    type: object
  admin_views.PlaylistVideoReqStruct:
    properties:
      playlist_id:
        type: string
      videos_ids:
        items:
          type: string
        type: array
    required:
    - playlist_id
    - videos_ids
    type: object
  admin_views.VideoStreamKeyReqStruct:
    properties:
      video_id:
        type: string
    required:
    - video_id
    type: object
  admin_views.VideoStreamReqStruct:
    properties:
      video_ids:
        items:
          type: string
        type: array
    required:
    - video_ids
    type: object
  mongo_modals.ActiveSessionsModel:
    properties:
      _id:
        type: string
      createdAt:
        type: string
      exp:
        type: integer
      ip:
        type: string
      status:
        type: string
      token_id:
        type: string
      ua:
        type: string
      updatedAt:
        type: string
      user_id:
        type: string
    type: object
  mongo_modals.UsersModel:
    properties:
      access_level:
        type: string
      access_level_weight:
        type: integer
      auth_provider:
        type: string
      email:
        type: string
      mobile:
        type: string
      password:
        type: string
      uid:
        type: string
      username:
        type: string
    required:
    - access_level
    - access_level_weight
    - email
    - mobile
    - password
    - username
    type: object
  mongo_modals.VideoPlayListModal:
    properties:
      created_by_user:
        type: string
      description:
        type: string
      is_live:
        type: boolean
      price:
        type: integer
      title:
        type: string
      videos_ids:
        items:
          type: string
        type: array
    required:
    - is_live
    - price
    - title
    - videos_ids
    type: object
  mongo_modals.VideoUploadModal:
    properties:
      created_by_user:
        type: string
      description:
        type: string
      duration:
        type: integer
      is_live:
        type: boolean
      link_to_original_video:
        type: string
      link_to_video_preview_image:
        type: string
      link_to_video_stream:
        type: string
      title:
        type: string
      uploaded_by_user:
        type: string
      video_decryption_key:
        type: string
    required:
    - duration
    - is_live
    - title
    type: object
  my_modules.ResponseFormat:
    properties:
      data: {}
      msg:
        type: string
      status:
        type: string
    required:
    - data
    - msg
    - status
    type: object
  user_views.SocialAuthReqStruct:
    properties:
      idToken:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - idToken
    type: object
  user_views.UserCredentialReqStruct:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - password
    type: object
  user_views.UserMobileCredentialReqStruct:
    properties:
      mobile:
        type: string
      password:
        type: string
    required:
    - mobile
    - password
    type: object
info:
  contact: {}
paths:
  /admin/generate_video_stream/:
    post:
      consumes:
      - application/json
      description: api to get the list of all the videos uploaded by the logged user
      parameters:
      - description: Video IDs
        in: body
        name: video_ids
        required: true
        schema:
          $ref: '#/definitions/admin_views.VideoStreamReqStruct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
      summary: Generate video stream
      tags:
      - Manage Videos
  /admin/get_stream_key/:
    post:
      consumes:
      - application/json
      description: api to get video decryption key for hls stream
      parameters:
      - description: Video ID
        in: body
        name: video_id
        required: true
        schema:
          $ref: '#/definitions/admin_views.VideoStreamKeyReqStruct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
      summary: get video decode key
      tags:
      - Manage Videos
  /admin/playlist/:
    get:
      consumes:
      - application/json
      description: api to fetch existing playlist
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/admin_views.GetAllPlayListsRespStruct'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
      summary: Get list of playlist
      tags:
      - Playlist
    post:
      consumes:
      - application/json
      description: api to create new empty playlist
      parameters:
      - description: New Playlist
        in: body
        name: new_playlist_data
        required: true
        schema:
          $ref: '#/definitions/mongo_modals.VideoPlayListModal'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/admin_views.CreatePlayListRespStruct'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
      summary: Create new playlist
      tags:
      - Playlist
    put:
      consumes:
      - application/json
      description: api to update playlist videos
      parameters:
      - description: Playlist videos
        in: body
        name: video_list
        required: true
        schema:
          $ref: '#/definitions/admin_views.PlaylistVideoReqStruct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
      summary: Update playlist videos
      tags:
      - Playlist
  /admin/upload_list/:
    get:
      description: api to get the list of all the videos uploaded by the logged user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/admin_views.GetAllUploadedVideosRespStruct'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
      summary: get all uploaded videos
      tags:
      - Manage Videos
  /admin/upload_streaming_video/:
    post:
      consumes:
      - multipart/form-data
      description: api to upload video content for multiple adaptive bit rate streaming
      parameters:
      - description: Video file
        in: formData
        name: video_file
        required: true
        type: file
      - description: Preview image file
        in: formData
        name: preview_image_file
        required: true
        type: file
      - in: formData
        name: created_by
        required: true
        type: string
      - in: formData
        name: description
        type: string
      - in: formData
        name: is_live
        type: boolean
      - in: formData
        name: title
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
      summary: video upload
      tags:
      - Manage Videos
  /login:
    post:
      consumes:
      - application/json
      description: allow people to login into their account
      parameters:
      - description: Add user
        in: body
        name: existing_user
        required: true
        schema:
          $ref: '#/definitions/user_views.UserCredentialReqStruct'
      - description: Access level
        enum:
        - admin
        - super_admin
        - customer
        in: query
        name: access_level
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
      summary: url to login
      tags:
      - Account
  /login_mobile:
    post:
      consumes:
      - application/json
      description: allow people to login into their account
      parameters:
      - description: Add user
        in: body
        name: existing_user
        required: true
        schema:
          $ref: '#/definitions/user_views.UserMobileCredentialReqStruct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
      summary: url to login with mobile number
      tags:
      - Account
  /login_status:
    get:
      consumes:
      - application/json
      description: api used to validate user login session
      parameters:
      - description: Access level
        enum:
        - admin
        - super_admin
        - customer
        in: query
        name: access_level
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
      summary: Login status
      tags:
      - Account
  /sign_up:
    post:
      consumes:
      - application/json
      description: allow people to create new to user account
      parameters:
      - description: Add user
        in: body
        name: new_user
        required: true
        schema:
          $ref: '#/definitions/user_views.UserCredentialReqStruct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
      summary: url to signup
      tags:
      - Account
  /user/:
    delete:
      consumes:
      - application/json
      description: allow people to delete their account
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
      summary: url to delete user account
      tags:
      - Account
    get:
      consumes:
      - application/json
      description: allow people to view their user profile data
      parameters:
      - description: page
        in: query
        name: page
        type: string
      - description: limit
        in: query
        name: limit
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
      summary: View user data
      tags:
      - Account
    put:
      consumes:
      - application/json
      description: allow people to update their user profile data
      parameters:
      - description: Add user
        in: body
        name: new_user
        required: true
        schema:
          $ref: '#/definitions/mongo_modals.UsersModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
      summary: Update user data
      tags:
      - Account
  /user/active_sessions/:
    get:
      consumes:
      - application/json
      description: return the active user session/token across all browser
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
      summary: Get active user login session
      tags:
      - Session
  /user/block_token/:
    post:
      consumes:
      - application/json
      description: Adds the token of user to block list based on provided token id
      parameters:
      - description: block token
        in: body
        name: block_active_session
        required: true
        schema:
          $ref: '#/definitions/mongo_modals.ActiveSessionsModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
      summary: Block specified session
      tags:
      - Session
  /user/logout/:
    get:
      consumes:
      - application/json
      description: API allow user to logout, which delete the cookie which stores
        token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
      summary: allow user to logout
      tags:
      - Session
  /verify_social_auth:
    post:
      consumes:
      - application/json
      description: url to signup/login with social authentication
      parameters:
      - description: Add user
        in: body
        name: new_or_existing_user
        required: true
        schema:
          $ref: '#/definitions/user_views.SocialAuthReqStruct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/my_modules.ResponseFormat'
      summary: Verify Social Authentication
      tags:
      - Account
swagger: "2.0"
